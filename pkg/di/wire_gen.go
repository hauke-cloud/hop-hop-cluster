// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/hauke-cloud/hop-hop-cluster/internal/config"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/api"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/api/handler"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/app"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/db"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/logger"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/repository"
	"github.com/hauke-cloud/hop-hop-cluster/pkg/usecase"
)

// Injectors from wire.go:

func Initialize(cfg config.Config) (*app.StartApp, error) {
	gormDB, err := db.ConnectDatabase()
	if err != nil {
		return nil, err
	}
	clusterRepository := repository.NewClusterRepository(gormDB, cfg)
	appLogger := logging.NewAppLogger(cfg)
	clusterUseCase := usecase.NewClusterUseCase(clusterRepository, appLogger, cfg)
	clusterHandler := handler.NewClusterHandler(clusterUseCase, cfg)
	serverHTTP := http.NewServerHTTP(clusterHandler, cfg)
	startApp := app.NewStartApp(serverHTTP, clusterUseCase, cfg, appLogger)
	return startApp, nil
}
